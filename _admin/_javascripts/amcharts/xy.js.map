{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false, position: \"absolute\" }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t}\n\n\tprotected _maskGrid(){\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif(cursor){\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif(snapToSeries){\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart && $object.keys(chart.plotContainer._downPoints).length > 1){\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\nthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\t\t/**\n\t\t * this would change legend marker color to the last colum in the selection\n\t\tif(!dataItem){\n\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\tconsole.log(lastDataItem)\n\t\t\tif(lastDataItem){\n\t\t\t\tdataItem = lastDataItem;\n\t\t\t}\t\t\t\n\t\t}*/\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(startIndex > 0){\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif(this.isDirty(\"valueYShow\") || this.isDirty(\"valueYShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))){\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis.resetExtremes();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", ()=>{\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(value < selectionMin){\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif(minLog <= 0){\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif(step < 1){\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\t\t\t\t\t\t\t\t\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif(this.get(\"logarithmic\")){\n\t\t\tif(this.get(\"extraMin\") == null){\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif(this.get(\"extraMax\") == null){\n\t\t\t\textraMax = 0.2;\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\t\t\t\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif(this.get(\"logarithmic\")){\n\t\t\tif(this.get(\"extraMin\") == null){\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif(this.get(\"extraMax\") == null){\n\t\t\t\textraMax = 0.2;\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif(this.get(\"logarithmic\")){\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin;\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\tlet date = new Date(this.positionToValue(position));\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\t/**\r\n\t * @todo review\r\n\t */\t\r\n\tindex?: number\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\r\n\t\t\tlet value = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime() - intervalDuration;\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\taxis.ghostLabel.set(\"forceHidden\", this.get(\"inside\"));\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\"\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\taxis.addTag(opposite);\t\t\t\t\t\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(\"opposite\");\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\t\t\t\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\t/**\n\t * @todo review\n\t */\t\n\tlowX0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\tlowY0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\tlowX1?: number;\n\t/**\n\t * @todo review\n\t */\t\n\tlowY1?: number;\n\n\t/**\n\t * @todo review\n\t */\n\thighX0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\thighY0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\thighX1?: number;\n\t/**\n\t * @todo review\n\t */\t\n\thighY1?: number;\n\n\t/**\n\t * @todo review\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * @todo review\r\n\t */\t\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\t/**\n\t * @todo review\n\t */\t\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","isMeasured","position","plotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","gridContainer","series","xAxis","get","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","_getWheelSign","se","_fixWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","_display","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","make","labelsContainer","label","axisLength","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","len","inited","_createGraphics","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","_toggleColumn","j","_updateGraphics","_skipped","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","resetExtremes","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","_dataSetId","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","XYSeries","interactive","interactiveChildren","Graphics","_addOrientationClass","orientation","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","Container","List","background","Rectangle","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","NaN","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","unitValue","added","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","processDataItem","_formatText","stepPower","decCount","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","setDataSet","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","firstDate","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervals","_date","close","_updateDates","openValue","closeValue","result","diValue","first","second","value1","zoomToValues","DateAxis","dates","_dates","found","itemValue","findex","_updateAllDates","valueToIndex","previousPosition","minDifference","realValue","GaplessDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","axisChildren","point1","point2","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}